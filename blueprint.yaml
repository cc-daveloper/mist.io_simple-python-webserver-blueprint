tosca_definitions_version: cloudify_dsl_1_2


imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://raw.githubusercontent.com/mistio/cloudify-mist-plugin/reform_kube/plugin.yaml


inputs:
  mist_uri:
    description: The mist custom uri
    default: 'https://mist.io'
  mist_username:
    description: Mist.io username
    default: ''
  mist_password:
    description: Mist.io password
    default: ''
  mist_token:
    description: Mist.io api token
    default: ''
  mist_cloud:
    default: ''
  mist_image:
    default: ''
  mist_size:
    default: ''
  mist_location:
    default: ''
  mist_key:
    default: ''
  machine_name:
    default: 'yolomachine'
  webserver_port:
    description: >
      The HTTP web server port.
    default: 8000
  host_ip:
    default: localhost


node_templates:
  host:
    type: cloudify.mist.nodes.Server
    properties:
      ip: { get_input: host_ip }
      install_agent: false
      mist_config:
          mist_uri: { get_input: mist_uri }
          api_token: { get_input: mist_token }
      parameters:
          cloud_id: { get_input: mist_cloud }
          name: { get_input: machine_name }
          image_id: { get_input: image_id }
          size_id: { get_input: size_id }
          location_id: { get_input: location_id }
          key: { get_input: key_id }

  http_web_server:
    type: cloudify.nodes.WebServer
    properties:
      port: { get_input: webserver_port }
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
    interfaces:
      cloudify.interfaces.lifecycle:
        create: install.py
        delete: uninstall.py

outputs:
  http_endpoint:
    description: Web server external endpoint
    value: { concat: ['http://', { get_property: [ host, ip ] },
                      ':', { get_property: [http_web_server, port] }] }

workflows:
  faeskata: scripts/faeskata.py
